{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","url","isLarge","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","tempUrl","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","banner","setbanner","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","str","n","substr","truncate","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c3de41.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, {useState, useEffect} from 'react'\nimport axios from './axios.js';\nimport './Row.css';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\nfunction Row({title, url, isLarge}) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    \n    useEffect(() => {\n        async function fetchData(){\n            if(url){\n                const request = await axios.get(url);\n                setMovies(request.data.results);\n                return request;\n            }\n        }\n        fetchData();\n    }, [])\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1\n        }\n    }\n\n    const handleClick = (movie) => {\n        if(trailerUrl){\n            setTrailerUrl(\"\");\n        } else {\n            movieTrailer(movie?.name || movie?.title || \"\")\n            .then(tempUrl => {\n                const urlParams = new URLSearchParams(new URL(tempUrl).search);\n                setTrailerUrl(urlParams.get('v'));\n            })\n            .catch(error => console.log(error))\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row__posters\">\n                {movies.map((movie) => (\n                    <img \n                    key={movie.id} \n                    onClick= {()=>{handleClick(movie)}}\n                    className={`row__poster ${isLarge && \"row__posterLarge\"}`} src={`${base_url}${isLarge ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}></img>\n                ))}\n            </div>\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />} \n        </div>\n    )\n}\n\nexport default Row;\n","const API_KEY = \"8512df26e65a0e56cee94107e56cc9c6\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en—US`, \n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`, \n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en—US`, \n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`, \n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`, \n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`, \n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`, \n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99` \n}\n\nexport default requests;","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css'\n\nconst base_url = \"https://image.tmdb.org/t/p/original\"\nfunction Banner() {\n\n    const [banner, setbanner] = useState([])\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setbanner(request.data.results[Math.floor(Math.random() * request.data.results.length)]);\n            return request;\n        }\n        fetchData();\n    }, [])\n\n    function truncate(str, n = 150){\n        return str?.length > n ? str.substr(0, n-1) + \"...\" :str;\n    }\n    \n    return (\n        <header className=\"banner\" style={{ backgroundSize:\"cover\", backgroundImage: `url(${base_url}${banner?.backdrop_path})`, backgroundPosition: \"center center\"}}>\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">{banner?.name || banner?.title}</h1>\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <h1 className=\"banner__description\">{truncate(banner?.overview)}</h1>\n            </div>\n            <div className=\"banner__fade\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\nimport './Nav.css';\n\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n    useEffect(()=>{\n        window.addEventListener(\"scroll\", ()=>{\n            if(window.scrollY>100){handleShow(true);}\n            else{handleShow(false);}\n        })\n        return ()=>{\n            window.removeEventListener(\"scroll\");\n        }\n    }, []);\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img className=\"nav__logo\" \n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"NETFLIX\"></img>\n            <img className=\"nav__avatar\" \n            src=\"https://upload.wikimedia.org/wikipedia/commons/8/80/Bald_Man.svg\" alt=\"AVATAR\"></img>\n        </div>\n    )\n}\n\nexport default Nav\n","import './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner'\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" url={requests.fetchNetflixOriginals} isLarge/>\n      <Row title=\"Trending Now\" url={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" url={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" url={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" url={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" url={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" url={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" url={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}